pool:
  name: Azure Pipelines
  demands: java

steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: |
     **/DNCD.Service.API.csproj
     **/DNCD.Project.Portal.csproj

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: Carmasonarconnection
    organization: 'carma-public'
    projectKey: 'DevOpsStack_carma'
    projectName: carma

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: |
     **/DNCD.Service.API.csproj
     **/DNCD.Project.Portal.csproj

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: |
     **/DNCD.Service.API.csproj
     **/DNCD.Project.Portal.csproj

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'

- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'

- task: DockerCompose@0
  displayName: 'Build services'
  inputs:
    azureSubscription: 
    dockerComposeFile: 'docker-compose.yml'
    action: 'Build services'
    additionalImageTags: '$(build.buildid)'
    includeLatestTag: true

- task: AquaSecurityOfficial.trivy-official.custom-build-release-task.trivy@1
  displayName: 'Echo trivy latest'

- task: DockerCompose@0
  displayName: 'Push Docker image to ACR'
  inputs:
    azureSubscription: 
    azureContainerRegistry: '{"loginServer":"akscontainerregistry1234.azurecr.io", "id" : "/subscriptions/1cfd9c12-2c35-4462-a5f4-75403af97042/resourceGroups/aks-rg/providers/Microsoft.ContainerRegistry/registries/akscontainerregistry1234"}'
    dockerComposeFile: 'docker-compose.yml'
    action: 'Push services'
    additionalImageTags: '$(build.buildid)'
    includeLatestTag: true
  enabled: false

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: 'kube_manifests'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
